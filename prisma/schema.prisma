generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model audit_logs {
  id         BigInt    @id @default(autoincrement())
  user_id    BigInt?
  action     String    @db.VarChar(255)
  details    String?   @db.Text
  created_at DateTime? @default(now()) @db.DateTime(0)
  user       user?     @relation(fields: [user_id], references: [user_id], onUpdate: Restrict, map: "audit_logs_ibfk_1")

  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model company {
  company_id               BigInt                     @id @default(autoincrement())
  name                     String?                    @db.VarChar(50)
  phone                    Int?
  email                    String                     @unique(map: "email") @db.VarChar(100)
  address1                 String?                    @db.VarChar(300)
  address2                 String?                    @db.VarChar(300)
  zip_code                 Int?
  expiry_minutes           Int?                       @default(10)
  media_url                String?                    @db.VarChar(300)
  created_at               DateTime                   @default(now()) @db.Timestamp(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  status                   company_status             @default(active)
  assigned_user            assigned_user[]
  company_session          company_session[]
  company_user             company_user[]
  document                 document[]
  investor_packages        investor_packages[]
  investor_trader_packages investor_trader_packages[]
  session                  session[]
  user                     user[]
  vendor                   vendor[]
}

model country {
  country_id      BigInt         @id @default(autoincrement())
  code            String         @db.Char(2)
  name            String         @db.VarChar(100)
  phone_code      Int
  currency_symbol String?        @db.VarChar(10)
  currency        String?        @db.VarChar(3)
  status          country_status @default(active)
  company_user    company_user[]
  user            user[]
  vendor          vendor[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model document {
  document_id BigInt                @id @default(autoincrement())
  company_id  BigInt?
  user_id     BigInt?
  title       String?               @db.VarChar(50)
  media_url   String?               @db.VarChar(200)
  media_url_2 String?               @db.VarChar(200)
  is_verified document_is_verified? @default(no)
  created_at  DateTime              @default(now()) @db.Timestamp(0)
  updated_at  DateTime              @default(now()) @db.Timestamp(0)
  status      document_status
  company     company?              @relation(fields: [company_id], references: [company_id], onDelete: Restrict, onUpdate: Restrict, map: "document_ibfk_1")
  user        user?                 @relation(fields: [user_id], references: [user_id], onDelete: Restrict, onUpdate: Restrict, map: "document_ibfk_2")

  @@index([company_id], map: "company_id")
  @@index([user_id], map: "user_id")
}

model investor_packages {
  investor_packages_id BigInt                @id @default(autoincrement())
  company_id           BigInt?
  role_id              BigInt?
  name                 String                @db.VarChar(50)
  min_amount           Decimal               @db.Decimal(18, 2)
  max_amount           Decimal               @db.Decimal(18, 2)
  daily_roi            Decimal               @db.Decimal(5, 4)
  period_days          Int
  waiting_period_days  Int?                  @default(4)
  created_at           DateTime?             @default(now()) @db.DateTime(0)
  updated_at           DateTime?             @default(now()) @db.DateTime(0)
  company              company?              @relation(fields: [company_id], references: [company_id], onDelete: Cascade, onUpdate: Restrict, map: "investor_packages_ibfk_1")
  role                 role?                 @relation(fields: [role_id], references: [role_id], onDelete: Restrict, onUpdate: Restrict, map: "investor_packages_ibfk_2")
  investor_portfolios  investor_portfolios[]

  @@index([company_id], map: "company_id")
  @@index([role_id], map: "role_id")
}

model investor_portfolios {
  id                BigInt            @id @default(autoincrement())
  user_id           BigInt
  package_id        BigInt
  investment_amount Decimal           @db.Decimal(18, 2)
  daily_roi_amount  Decimal?          @db.Decimal(18, 2)
  total_roi         Decimal?          @db.Decimal(18, 2)
  start_date        DateTime          @db.DateTime(0)
  end_date          DateTime?         @db.DateTime(0)
  created_at        DateTime?         @default(now()) @db.DateTime(0)
  updated_at        DateTime?         @default(now()) @db.DateTime(0)
  user              user              @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Restrict, map: "investor_portfolios_ibfk_1")
  investor_packages investor_packages @relation(fields: [package_id], references: [investor_packages_id], onDelete: Cascade, onUpdate: Restrict, map: "investor_portfolios_ibfk_2")

  @@index([package_id], map: "package_id")
  @@index([user_id], map: "user_id")
}

model kyc_details {
  id               BigInt                    @id @default(autoincrement())
  user_id          BigInt
  full_name        String                    @db.VarChar(255)
  country          String?                   @db.VarChar(255)
  document_type    kyc_details_document_type
  document_file    String                    @db.VarChar(255)
  selfie_file      String                    @db.VarChar(255)
  kyc_status       kyc_details_kyc_status?   @default(Pending)
  rejection_reason String?                   @db.VarChar(255)
  created_at       DateTime?                 @default(now()) @db.DateTime(0)
  updated_at       DateTime?                 @default(now()) @db.DateTime(0)
  user             user                      @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Restrict, map: "kyc_details_ibfk_1")
  kyc_documents    kyc_documents[]

  @@index([user_id], map: "user_id")
}

model kyc_documents {
  id            BigInt                       @id @default(autoincrement())
  kyc_id        BigInt
  document_file String                       @db.VarChar(255)
  document_type kyc_documents_document_type?
  created_at    DateTime?                    @default(now()) @db.DateTime(0)
  kyc_details   kyc_details                  @relation(fields: [kyc_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "kyc_documents_ibfk_1")

  @@index([kyc_id], map: "kyc_id")
}

model otp {
  otp_id     BigInt   @id @default(autoincrement())
  email      String?  @db.VarChar(100)
  phone      Int?
  otp        String?  @db.VarChar(100)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
}

model payments {
  id             BigInt                  @id @default(autoincrement())
  user_id        BigInt
  portfolio_id   BigInt
  token_price    Decimal                 @db.Decimal(18, 6)
  payment_amount Decimal                 @db.Decimal(18, 2)
  payment_fee    Decimal                 @db.Decimal(18, 2)
  status         payments_status?        @default(Pending)
  payment_method payments_payment_method
  payment_date   DateTime?               @default(now()) @db.DateTime(0)
  created_at     DateTime?               @default(now()) @db.DateTime(0)
  updated_at     DateTime?               @default(now()) @db.DateTime(0)
  user           user                    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Restrict, map: "payments_ibfk_1")

  @@index([user_id], map: "user_id")
}

model role {
  role_id                  BigInt                     @id @default(autoincrement())
  title                    String                     @unique(map: "name") @db.VarChar(50)
  description              String?                    @db.VarChar(255)
  company_user             company_user[]
  investor_packages        investor_packages[]
  investor_trader_packages investor_trader_packages[]
  user                     user[]
  vendor                   vendor[]
}

model session {
  session_id        BigInt               @id @default(autoincrement())
  company_id        BigInt?
  user_id           BigInt
  anroid_token      String?              @db.VarChar(100)
  ios_token         String?              @db.VarChar(100)
  web_token         String?              @db.VarChar(100)
  device_id_android String?              @db.VarChar(100)
  device_id_ios     String?              @db.VarChar(100)
  device_id_web     String?              @db.VarChar(100)
  device_type       session_device_type?
  created_at        DateTime?            @default(now()) @db.DateTime(0)
  expires_at        DateTime             @db.DateTime(0)
  user              user                 @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Restrict, map: "session_ibfk_1")
  company           company?             @relation(fields: [company_id], references: [company_id], onDelete: Restrict, onUpdate: Restrict, map: "session_ibfk_2")

  @@index([company_id], map: "company_id")
  @@index([user_id], map: "user_id")
}

model trader_packages {
  id                BigInt              @id @default(autoincrement())
  name              String              @db.VarChar(50)
  min_amount        Decimal             @db.Decimal(18, 2)
  max_amount        Decimal             @db.Decimal(18, 2)
  fee_percentage    Decimal             @db.Decimal(5, 2)
  created_at        DateTime?           @default(now()) @db.DateTime(0)
  updated_at        DateTime?           @default(now()) @db.DateTime(0)
  trader_portfolios trader_portfolios[]
}

model trader_portfolios {
  id               BigInt          @id @default(autoincrement())
  user_id          BigInt
  package_id       BigInt
  portfolio_amount Decimal         @db.Decimal(18, 2)
  fee_amount       Decimal?        @db.Decimal(18, 2)
  created_at       DateTime?       @default(now()) @db.DateTime(0)
  updated_at       DateTime?       @default(now()) @db.DateTime(0)
  user             user            @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Restrict, map: "trader_portfolios_ibfk_1")
  trader_packages  trader_packages @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "trader_portfolios_ibfk_2")

  @@index([package_id], map: "package_id")
  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user {
  user_id                BigInt                 @id @default(autoincrement())
  company_id             BigInt?
  role_id                BigInt?
  country_id             BigInt?
  email                  String                 @unique(map: "email") @db.VarChar(255)
  is_email_verified      user_is_email_verified @default(no)
  password               String?                @db.VarChar(255)
  otp_expiry_time        DateTime               @default(now()) @db.Timestamp(0)
  first_name             String?                @db.VarChar(50)
  last_name              String?                @db.VarChar(50)
  phone                  String?                @db.VarChar(20)
  zip_code               String?                @db.VarChar(20)
  address1               String?                @db.VarChar(200)
  address2               String?                @db.VarChar(200)
  media_url              String?                @db.VarChar(200)
  created_at             DateTime?              @default(now()) @db.Timestamp(0)
  updated_at             DateTime?              @default(now()) @db.Timestamp(0)
  status                 user_status            @default(active)
  profile_filling        user_profile_filling   @default(no)
  kyc_filling            user_kyc_filling       @default(no)
  kyc_document_title     String?                @db.VarChar(100)
  kyc_document_media_url String?                @db.VarChar(500)
  kyc_video_media_url    String?                @db.VarChar(500)
  exchange_verify        user_exchange_verify   @default(no)
  assigned_user          assigned_user[]
  audit_logs             audit_logs[]
  document               document[]
  investor_portfolios    investor_portfolios[]
  kyc_details            kyc_details[]
  payments               payments[]
  session                session[]
  trader_portfolios      trader_portfolios[]
  company                company?               @relation(fields: [company_id], references: [company_id], onDelete: Restrict, onUpdate: Restrict, map: "user_ibfk_1")
  country                country?               @relation(fields: [country_id], references: [country_id], onDelete: Restrict, onUpdate: Restrict, map: "user_ibfk_2")
  role                   role?                  @relation(fields: [role_id], references: [role_id], onDelete: Restrict, onUpdate: Restrict, map: "user_ibfk_3")

  @@index([company_id], map: "company_id")
  @@index([country_id], map: "country_id")
  @@index([role_id], map: "role_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model vendor {
  vendor_id         BigInt                   @id @default(autoincrement())
  company_id        BigInt?
  role_id           BigInt?
  country_id        BigInt?
  email             String                   @unique(map: "email") @db.VarChar(255)
  is_email_verified vendor_is_email_verified @default(no)
  password          String                   @db.VarChar(255)
  otp_expiry_time   DateTime                 @default(now()) @db.Timestamp(0)
  first_name        String?                  @db.VarChar(50)
  last_name         String?                  @db.VarChar(50)
  phone             String?                  @db.VarChar(20)
  zip_code          String?                  @db.VarChar(20)
  address1          String?                  @db.VarChar(200)
  address2          String?                  @db.VarChar(200)
  media_url         String?                  @db.VarChar(200)
  created_at        DateTime?                @default(now()) @db.Timestamp(0)
  updated_at        DateTime?                @default(now()) @db.Timestamp(0)
  status            vendor_status            @default(active)
  company           company?                 @relation(fields: [company_id], references: [company_id], onDelete: Restrict, onUpdate: Restrict, map: "vendor_ibfk_1")
  country           country?                 @relation(fields: [country_id], references: [country_id], onDelete: Restrict, onUpdate: Restrict, map: "vendor_ibfk_2")
  role              role?                    @relation(fields: [role_id], references: [role_id], onDelete: Restrict, onUpdate: Restrict, map: "vendor_ibfk_3")

  @@index([company_id], map: "company_id")
  @@index([country_id], map: "country_id")
  @@index([role_id], map: "role_id")
}

model company_session {
  company_session_id BigInt                       @id @default(autoincrement())
  company_id         BigInt?
  company_user_id    BigInt
  anroid_token       String?                      @db.VarChar(100)
  ios_token          String?                      @db.VarChar(100)
  web_token          String?                      @db.VarChar(100)
  device_id_android  String?                      @db.VarChar(100)
  device_id_ios      String?                      @db.VarChar(100)
  device_id_web      String?                      @db.VarChar(100)
  device_type        company_session_device_type?
  created_at         DateTime?                    @default(now()) @db.DateTime(0)
  expires_at         DateTime                     @db.DateTime(0)
  company            company?                     @relation(fields: [company_id], references: [company_id], onDelete: Cascade, onUpdate: Restrict, map: "company_session_ibfk_1")
  company_user       company_user                 @relation(fields: [company_user_id], references: [company_user_id], onUpdate: Restrict, map: "company_session_ibfk_2")

  @@index([company_id], map: "company_id")
  @@index([company_user_id], map: "company_user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model company_user {
  company_user_id   BigInt                         @id @default(autoincrement())
  company_id        BigInt?
  role_id           BigInt?
  country_id        BigInt?
  email             String                         @unique(map: "email") @db.VarChar(255)
  is_email_verified company_user_is_email_verified @default(no)
  password          String?                        @db.VarChar(255)
  otp_expiry_time   DateTime                       @default(now()) @db.Timestamp(0)
  first_name        String?                        @db.VarChar(50)
  last_name         String?                        @db.VarChar(50)
  phone             String?                        @db.VarChar(20)
  zip_code          String?                        @db.VarChar(20)
  address1          String?                        @db.VarChar(200)
  address2          String?                        @db.VarChar(200)
  media_url         String?                        @db.VarChar(200)
  created_at        DateTime?                      @default(now()) @db.Timestamp(0)
  updated_at        DateTime?                      @default(now()) @db.Timestamp(0)
  status            company_user_status            @default(active)
  assigned_user     assigned_user[]
  company_session   company_session[]
  company           company?                       @relation(fields: [company_id], references: [company_id], onDelete: Cascade, onUpdate: Restrict, map: "company_user_ibfk_1")
  country           country?                       @relation(fields: [country_id], references: [country_id], onDelete: Restrict, onUpdate: Restrict, map: "company_user_ibfk_2")
  role              role?                          @relation(fields: [role_id], references: [role_id], onDelete: Restrict, onUpdate: Restrict, map: "company_user_ibfk_3")

  @@index([company_id], map: "company_id")
  @@index([country_id], map: "country_id")
  @@index([role_id], map: "role_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model assigned_user {
  assigned_user_id BigInt                @id @default(autoincrement())
  company_id       BigInt?
  company_user_id  BigInt?
  user_id          BigInt?
  created_at       DateTime              @default(now()) @db.Timestamp(0)
  updated_at       DateTime              @default(now()) @db.Timestamp(0)
  status           assigned_user_status? @default(active)
  company          company?              @relation(fields: [company_id], references: [company_id], onDelete: Cascade, onUpdate: Restrict, map: "assigned_user_ibfk_1")
  company_user     company_user?         @relation(fields: [company_user_id], references: [company_user_id], onDelete: Restrict, onUpdate: Restrict, map: "assigned_user_ibfk_2")
  user             user?                 @relation(fields: [user_id], references: [user_id], onDelete: Restrict, onUpdate: Restrict, map: "assigned_user_ibfk_3")

  @@index([company_id], map: "company_id")
  @@index([company_user_id], map: "company_user_id")
  @@index([user_id], map: "user_id")
}

model investor_trader_packages {
  investor_trader_packages_id BigInt                         @id @default(autoincrement())
  company_id                  BigInt?
  role_id                     BigInt?
  name                        String                         @db.VarChar(50)
  min_amount                  Decimal                        @db.Decimal(18, 2)
  max_amount                  Decimal                        @db.Decimal(18, 2)
  daily_roi                   Decimal                        @db.Decimal(5, 4)
  period_days                 Int
  waiting_period_days         Int?                           @default(4)
  type                        investor_trader_packages_type?
  created_at                  DateTime?                      @default(now()) @db.DateTime(0)
  updated_at                  DateTime?                      @default(now()) @db.DateTime(0)
  company                     company?                       @relation(fields: [company_id], references: [company_id], onDelete: Cascade, onUpdate: Restrict, map: "investor_trader_packages_ibfk_1")
  role                        role?                          @relation(fields: [role_id], references: [role_id], onDelete: Restrict, onUpdate: Restrict, map: "investor_trader_packages_ibfk_2")

  @@index([company_id], map: "company_id")
  @@index([role_id], map: "role_id")
}

enum kyc_documents_document_type {
  Passport
  ID_Card        @map("ID Card")
  Driver_License @map("Driver License")
}

enum kyc_details_document_type {
  Passport
  ID_Card        @map("ID Card")
  Driver_License @map("Driver License")
}

enum user_is_email_verified {
  yes
  no
}

enum vendor_is_email_verified {
  yes
  no
}

enum document_is_verified {
  yes
  no
}

enum payments_status {
  Pending
  Confirmed
  Rejected
}

enum kyc_details_kyc_status {
  Pending
  Processing
  Approved
  Rejected
}

enum payments_payment_method {
  USDT
  BTC
  ETH
}

enum company_status {
  active
  inactive
}

enum document_status {
  active
  inactive
}

enum session_device_type {
  WEB
  ANDROID
  IOS
}

enum user_status {
  active
  inactive
}

enum vendor_status {
  active
  inactive
}

enum country_status {
  active
  inactive
}

enum company_user_is_email_verified {
  yes
  no
}

enum company_session_device_type {
  WEB
  ANDROID
  IOS
}

enum company_user_status {
  active
  inactive
}

enum assigned_user_status {
  active
  inactive
}

enum investor_trader_packages_type {
  investor
  trader
}

enum user_profile_filling {
  yes
  no
}

enum user_kyc_filling {
  yes
  no
}

enum user_exchange_verify {
  yes
  no
}
